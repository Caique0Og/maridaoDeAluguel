document.addEventListener("DOMContentLoaded", () => {
    const historicoContainer = document.querySelector(".historico");
    const botaoAdicionar = document.getElementById("adicionarPedido");

    const iconesServicos = {
        "Eletricista": "üîå",
        "Chaveiro": "üîë",
        "Encanador": "üö∞",
        "Pintor": "üé®",
        "Pedreiro": "üß±",
        "Jardineiro": "üåø"
    };

    // Fun√ß√£o para carregar o hist√≥rico de pedidos salvos no localStorage
    function carregarHistorico() {
        // Limpa o conte√∫do do hist√≥rico antes de carregar novos pedidos

        const pedidos = JSON.parse(localStorage.getItem("historicoPedidos")) || [];

        if (pedidos.length === 0) {
            historicoContainer.innerHTML += "<p>Voc√™ ainda n√£o fez nenhum pedido.</p>";
            return;
        }

        pedidos.forEach((pedido, index) => {
            const pedidoDiv = document.createElement("div");
            pedidoDiv.classList.add("pedido");

            const icone = iconesServicos[pedido.servico] || "‚ùì";
            const estrelas = gerarEstrelas(pedido.avaliacao);

            pedidoDiv.innerHTML = `
                <div class="pedido-info">
                    <span class="icone-servico">${icone}</span><br>
                    <h3>${pedido.servico}</h3><br> <p> ${pedido.data}</p><br>
                    <p><strong>Nome:</strong> ${pedido.profissional}</p><br>
                    <div class="avaliacao-historico">
                    ${estrelas}
                    </div>
                    <button class="removerPedido" data-index="${index}">Remover</button>
                </div>
            `;

            historicoContainer.appendChild(pedidoDiv);

            // Adiciona evento de remo√ß√£o ao bot√£o
            const botaoRemover = pedidoDiv.querySelector(".removerPedido");
            botaoRemover.addEventListener("click", removerPedido);
        });
    }

    // Fun√ß√£o para gerar a string de estrelas de acordo com a avalia√ß√£o
    function gerarEstrelas(avaliacao) {
        let estrelas = '';
        for (let i = 0; i < 5; i++) {
            if (i < avaliacao) {
                estrelas += '‚≠ê';
            } else {
                estrelas += '‚òÜ';
            }
        }
        return estrelas;
    }

    // Fun√ß√£o para adicionar um novo pedido ao hist√≥rico e salvar no localStorage
    function adicionarPedido() {
        const servico = prompt("Digite o servi√ßo que deseja adicionar (Ex: Eletricista, Chaveiro, etc.):");
        if (!servico) return;

        const profissional = prompt("Digite o nome do profissional:");
        if (!profissional) return;

        const avaliacao = prompt("D√™ uma avalia√ß√£o de 1 a 5 estrelas:");
        if (!avaliacao || isNaN(avaliacao) || avaliacao < 1 || avaliacao > 5) {
            alert("Avalia√ß√£o inv√°lida! Digite um n√∫mero entre 1 e 5.");
            return;
        }

        const pedidos = JSON.parse(localStorage.getItem("historicoPedidos")) || [];
        const novoPedido = { 
            servico, 
            profissional, 
            avaliacao, 
            data: new Date().toLocaleString()
        };
        pedidos.push(novoPedido);
        localStorage.setItem("historicoPedidos", JSON.stringify(pedidos));
        carregarHistorico();
    }

    // Fun√ß√£o para remover um pedido do hist√≥rico
    function removerPedido(event) {
        const index = event.target.getAttribute("data-index");
        const pedidos = JSON.parse(localStorage.getItem("historicoPedidos")) || [];
        pedidos.splice(index, 1); // Remove o pedido

        // Atualiza o localStorage e recarrega o hist√≥rico
        localStorage.setItem("historicoPedidos", JSON.stringify(pedidos));
        carregarHistorico(); // Atualiza a interface com o novo hist√≥rico
    }

    botaoAdicionar.addEventListener("click", adicionarPedido);
    carregarHistorico();
});
